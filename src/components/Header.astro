---
import getHomeDocument from '~/utils/getHomeDocument'
import Logo from '~/components/Logo.astro'
import VDLogo from '~/components/VDLogo.astro'

export type Props = { title?: string | null }
const props = Astro.props as Props
const { title } = props

const homeData = await getHomeDocument()

const headerLinks = homeData?.header_links
  ?.map(({ text, link }) => ({
    text,
    // @ts-expect-error type missing uid
    url: link.uid ? `/${link.uid}` : link.url,
    // @ts-expect-error type missing uid
    external: !!link.uid,
  }))
  .filter(x => x.text && x.url)
---

<header class='header'>
  <div class='header-left'>
    <a href='/' class='header-logo header-logo-home' aria-label='index'>
      <div class='header-logo-image'>
        <Logo />
      </div>
    </a>
    {
      title && (
        <div class='header-title'>
          <div class='header-title-text'>{title}</div>
        </div>
      )
    }
  </div>
  <div class='header-right'>
    {
      headerLinks?.map(({ text, url }) => (
        <a class='header-link' href={url}>
          {text}
        </a>
      ))
    }
    <a href='https://dlbn.co' class='header-logo' aria-label='index' target='_blank'>
      <div class='header-logo-image'>
        <VDLogo />
      </div>
    </a>
  </div>
</header>

<style is:global>
  .header {
    position: fixed;
    display: flex;
    left: 0;
    right: 0;
    top: 0;
    pointer-events: none;
    align-items: center;
    justify-content: space-between;
    z-index: 2;
    mix-blend-mode: difference;
    color: white;
    line-height: 24px;
  }

  .header-left,
  .header-right {
    display: flex;
    align-items: center;
  }

  .header-logo {
    padding: 20px;
    pointer-events: auto;
    outline: none;
    filter: invert(100%);
    &:focus-visible {
      box-shadow: 0 0 0 1px currentColor;
    }
  }

  .header-logo-image {
    width: 24px;
    height: 24px;
  }

  .header-logo-image svg {
    width: 100%;
    height: 100%;
  }

  .header-title {
    pointer-events: auto;
  }

  .header-link {
    padding: 20px;
    cursor: pointer;
    pointer-events: auto;
    outline: none;
    opacity: 0.5;
    mix-blend-mode: difference;
    &:focus-visible {
      box-shadow: 0 0 0 1px currentColor;
    }
  }

  .header-link:hover,
  .header-link:focus {
    opacity: 1;
  }
</style>
