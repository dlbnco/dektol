---
import type { PageDocument } from '~/prismic.generated'
export type Props = PageDocument
const { uid, data } = Astro.props
---
<a class='home-item' href={`/${uid}`}>{data.title || uid} <slot/></a>
<script>
  const focusIfHTML = (target: EventTarget | null) => {
    if (target instanceof HTMLElement) target.scrollIntoView(false)
  }
  [...document.querySelectorAll('.home-item')].forEach(item => {
    item.addEventListener('focus', e => focusIfHTML(e.target))
  })
</script>

<style is:global>
  .home-item {
    display: block;
    position: relative;
    padding: 48px;
    font-size: 24px;
    background: var(--background);
    outline: none;
    pointer-events: auto;
    width: 100%;
    overflow: hidden;
  }

  .home-item:hover,
  .home-item:focus {
    z-index: 1;
  }

  .home-item:before {
    content: '';
    position: absolute;
    top: 0;
    right: -1px;
    bottom: 0;
    left: -1px;
    box-shadow: inset 0 0 0 1px var(--foreground);
    opacity: 0.1;
  }
  
  .home-item:hover:before,
  .home-item:focus:before {
    opacity: 0.25;
  }

  .home-item + .home-item {
    margin-top: -1px;
  }

  @media (min-width: 720px) {
    .home-item {
      flex-basis: calc(50vw + 0.5px);
      flex-grow: 1;
      flex-shrink: 0;
      display: flex;
      flex-direction: column;
      justify-content: flex-end;
      margin-top: 64px;
      min-height: calc(100vh - 64px);
    }

    .home-item:before {
      top: 0;
      right: 0;
      bottom: -1px;
      left: 0;
      opacity: 0.1;
    }
    
    .home-item:last-of-type {
      margin-right: 1px;
    }

    .home-item:hover:before,
    .home-item:focus:before {
      opacity: 0.25;
    }

    .home-item + .home-item {
      margin-top: 64px;
      margin-left: -1px;
    }
  }
  @media (min-width: 1280px) {
    .home-item {
      flex-basis: calc(33.33vw + 0.5px);
    }
  }
</style>