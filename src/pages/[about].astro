---
import { asHTML } from '@prismicio/helpers'
import DefaultLayout from '~/components/DefaultLayout.astro'
import type { Props as DefaultLayoutProps } from '~/components/DefaultLayout.astro'
import getHomeDocument from '~/utils/getHomeDocument'
import getAboutDocument from '~/utils/getAboutDocument'

export const getStaticPaths = async () => {
  const aboutDocument = await getAboutDocument()
  if (!aboutDocument?.uid) return []
  return [{ params: { about: aboutDocument?.uid } }]
}

const aboutDocument = await getAboutDocument()
const homeData = await getHomeDocument()

const layoutProps: DefaultLayoutProps = {
  headerTitle: aboutDocument?.title || aboutDocument?.meta_title || aboutDocument?.uid,
  background: aboutDocument?.background || homeData?.background || undefined,
  foreground: aboutDocument?.foreground || homeData?.foreground || undefined,
  metaTitle: aboutDocument?.meta_title || undefined,
  metaDescription: aboutDocument?.meta_description || undefined,
  metaImage: aboutDocument?.meta_image.url
    ? {
      url: aboutDocument?.meta_image.url,
      alt: aboutDocument?.meta_image.alt || undefined,
      ...aboutDocument?.meta_image.dimensions,
    }
    : undefined,
}

const isExternalLink = (link?: string) => link?.startsWith('http')

---
<DefaultLayout {...layoutProps}>
  <div class='about-top-spacer' />
  {aboutDocument?.body.map(({ primary, items }) => (
    <div class='about-section'>
      <div class='about-container'>
        <div class='about-section-inner'>
          <div class='about-section-column about-section-left'>
            {primary.title && <h2 class='about-section-title'>{primary.title}</h2>}
          </div>
          <div class='about-section-column about-section-right'>
            {primary.description && <div class='about-section-description' set:html={asHTML(primary.description)} />}
            {items.length && (
              <ul class='about-section-links'>
                {items.map(({ link_text, link_url }) => (
                  <li class='about-section-link-item'>
                    {/* @ts-expect-error */}
                    <a href={link_url?.url} target='_blank'>
                      {link_text || link_url}
                      {/* @ts-expect-error */}
                      {isExternalLink(link_url?.url) && (
                        <svg viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
                          <path d="M3 2C2.44772 2 2 2.44772 2 3V12C2 12.5523 2.44772 13 3 13H12C12.5523 13 13 12.5523 13 12V8.5C13 8.22386 12.7761 8 12.5 8C12.2239 8 12 8.22386 12 8.5V12H3V3L6.5 3C6.77614 3 7 2.77614 7 2.5C7 2.22386 6.77614 2 6.5 2H3ZM12.8536 2.14645C12.9015 2.19439 12.9377 2.24964 12.9621 2.30861C12.9861 2.36669 12.9996 2.4303 13 2.497L13 2.5V2.50049V5.5C13 5.77614 12.7761 6 12.5 6C12.2239 6 12 5.77614 12 5.5V3.70711L6.85355 8.85355C6.65829 9.04882 6.34171 9.04882 6.14645 8.85355C5.95118 8.65829 5.95118 8.34171 6.14645 8.14645L11.2929 3H9.5C9.22386 3 9 2.77614 9 2.5C9 2.22386 9.22386 2 9.5 2H12.4999H12.5C12.5678 2 12.6324 2.01349 12.6914 2.03794C12.7504 2.06234 12.8056 2.09851 12.8536 2.14645Z" fill="currentColor" fill-rule="evenodd" clip-rule="evenodd" />
                        </svg>
                      )}
                    </a>
                  </li>
                ))}
              </ul>
            )}
          </div>
        </div>
      </div>
    </div>
  ))}
</DefaultLayout>

<style is:global>
  .about-top-spacer {
    padding-top: 200px;
    padding-top: max(30vmin, 200px);
  }

  .about-section {
    position: relative;
  }

  .about-section:before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    border-top: 1px solid var(--foreground);
    opacity: 0.25;
  }

  .about-container {
    padding: 0 16px;
    padding: 0 max(16px, 4.5vmax);
  }

  .about-section-left {
    padding: 16px 0;
  }
  .about-section-right {
    padding: 16px 0;
  }

  .about-section-title {
    font-size: max(2em, 2.5vmax);
    line-height: 2.5;
  }
  
  .about-section-description {
    font-size: max(1em, 1vmax);
    line-height: 1.5;
    max-width: 30em;
  }

  .about-section-description a {
    text-decoration: underline;
    outline: none;
  }

  .about-section-description a:hover,
  .about-section-description a:focus {
    text-decoration-thickness: 3px;
  }

  .about-section-links {
    display: flex;
    flex-wrap: wrap;
    font-size: max(0.875em, 0.75vmax);
    line-height: 1.25;
    margin-top: max(1em, 0.75vmax);
    max-width: 30em;
    gap: max(0.5em, 0.5vmax);
  }
  
  .about-section-link-item {
    position: relative;
  }

  .about-section-link-item a:before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: var(--foreground);
    opacity: 0.05;
    border-radius: 0.25em;
  }

  .about-section-link-item a:hover:before,
  .about-section-link-item a:focus:before {
    opacity: 0.1;
  }

  .about-section-link-item a {
    display: flex;
    align-items: center;
    position: relative;
    font-weight: 500;
    padding: 0.5em 0.75em;
    outline: none;
  }

  .about-section-link-item a svg {
    height: 1em;
    width: auto;
    margin-left: 0.5em;
  }

  @media (min-width: 720px) {
    .about-section-inner {
      display: flex;
      align-items: baseline;
      gap: 8vmax;
    }

    .about-section-left {
      position: sticky;
      top: 64px;
      padding: 0;
      flex: 1;
    }
    
    .about-section-right {
      flex: 2;
    }
  }

  @media(min-width: 1280px) {
    .about-section-column {
      flex: 1;
    }
  }
</style>